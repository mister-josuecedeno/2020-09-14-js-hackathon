{"version":3,"sources":["src/index.js"],"names":["canvas","document","querySelector","line","buttons","querySelectorAll","eraser","paintColor","ctx","getContext","width","window","innerWidth","height","innerHeight","lineJoin","lineCap","lineWidth","value","isDrawing","lastX","lastY","direction","draw","e","strokeStyle","beginPath","moveTo","lineTo","offsetX","offsetY","stroke","addEventListener","thickness","forEach","button","target","dataset","color"],"mappings":";AAAA,IAAMA,EAASC,SAASC,cAAc,SAChCC,EAAOF,SAASC,cAAc,cAC9BE,EAAUH,SAASI,iBAAiB,UACpCC,EAASL,SAASC,cAAc,WAElCK,EAAa,UAEXC,EAAMR,EAAOS,WAAW,MAC9BT,EAAOU,MAAQC,OAAOC,WACtBZ,EAAOa,OAASF,OAAOG,YACvBN,EAAIO,SAAW,QACfP,EAAIQ,QAAU,QACdR,EAAIS,UAAYd,EAAKe,MAErB,IAAIC,GAAY,EACZC,EAAQ,EACRC,EAAQ,EACRC,GAAY,EAEhB,SAASC,EAAKC,GACR,GAACL,EAAD,CACJX,EAAIiB,YAAclB,EAElBC,EAAIkB,YACJlB,EAAImB,OAAOP,EAAOC,GAClBb,EAAIoB,OAAOJ,EAAEK,QAASL,EAAEM,SACxBtB,EAAIuB,SACa,IAAA,EAAA,CAACP,EAAEK,QAASL,EAAEM,SAA9BV,EARc,EAAA,GAQPC,EARO,EAAA,IAajBrB,EAAOgC,iBAAiB,YAAa,SAACR,GACpCL,GAAY,EACK,IAAA,EAAA,CAACK,EAAEK,QAASL,EAAEM,SAA9BV,EAFyC,EAAA,GAElCC,EAFkC,EAAA,KAI5CrB,EAAOgC,iBAAiB,YAAaT,GACrCvB,EAAOgC,iBAAiB,UAAW,WAAOb,OAAAA,GAAY,IACtDnB,EAAOgC,iBAAiB,WAAY,WAAOb,OAAAA,GAAY,IAKvDc,UAAUD,iBAAiB,SAAU,WAAOxB,OAAAA,EAAIS,UAAYd,EAAKe,QAGjEd,EAAQ8B,QAAQ,SAACC,GACfA,EAAOH,iBACL,QACA,SAACR,GAAOjB,OAAAA,EAAaiB,EAAEY,OAAOC,QAAQC,UAK1ChC,EAAO0B,iBAAiB,QAAS,SAACR,GAAOjB,OAAAA,EAAaiB,EAAEY,OAAOC,QAAQC","file":"src.1fe209d9.js","sourceRoot":"..","sourcesContent":["const canvas = document.querySelector('#draw');\nconst line = document.querySelector('#thickness');\nconst buttons = document.querySelectorAll('button');\nconst eraser = document.querySelector('#eraser');\n\nlet paintColor = '#ffbb00';\n\nconst ctx = canvas.getContext('2d');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nctx.lineJoin = 'round';\nctx.lineCap = 'round';\nctx.lineWidth = line.value;\n\nlet isDrawing = false;\nlet lastX = 0;\nlet lastY = 0;\nlet direction = true;\n\nfunction draw(e) {\n  if (!isDrawing) return;\n  ctx.strokeStyle = paintColor;\n\n  ctx.beginPath();\n  ctx.moveTo(lastX, lastY);\n  ctx.lineTo(e.offsetX, e.offsetY);\n  ctx.stroke();\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n}\n\n// Add Eventlisteners\n\ncanvas.addEventListener('mousedown', (e) => {\n  isDrawing = true;\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n});\ncanvas.addEventListener('mousemove', draw);\ncanvas.addEventListener('mouseup', () => (isDrawing = false));\ncanvas.addEventListener('mouseout', () => (isDrawing = false));\n\n// Tools\n\n// Thickness\nthickness.addEventListener('change', () => (ctx.lineWidth = line.value));\n\n// Color\nbuttons.forEach((button) => {\n  button.addEventListener(\n    'click',\n    (e) => (paintColor = e.target.dataset.color)\n  );\n});\n\n// Eraser\neraser.addEventListener('click', (e) => (paintColor = e.target.dataset.color));\n"]}